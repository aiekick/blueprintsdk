#include <UI.h>
#include <imgui_json.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <GridFlip_vulkan.h>

namespace BluePrint
{
struct GridFlipFusionNode final : Node
{
    BP_NODE_WITH_NAME(GridFlipFusionNode, "GridFlip Transform", VERSION_BLUEPRINT, NodeType::Internal, NodeStyle::Default, "Fusion#Video#Shape")
    GridFlipFusionNode(BP* blueprint): Node(blueprint) { m_Name = "GridFlip Transform"; }

    ~GridFlipFusionNode()
    {
        if (m_fusion) { delete m_fusion; m_fusion = nullptr; }
        if (m_logo) { ImGui::ImDestroyTexture(m_logo); m_logo = nullptr; }
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void OnStop(Context& context) override
    {
        m_mutex.lock();
        m_MatOut.SetValue(ImGui::ImMat());
        m_mutex.unlock();
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        auto mat_first = context.GetPinValue<ImGui::ImMat>(m_MatInFirst);
        auto mat_second = context.GetPinValue<ImGui::ImMat>(m_MatInSecond);
        float progress = context.GetPinValue<float>(m_Pos);
        if (!mat_first.empty() && !mat_second.empty())
        {
            int gpu = mat_first.device == IM_DD_VULKAN ? mat_first.device_number : ImGui::get_default_gpu_index();
            if (!m_Enabled)
            {
                m_MatOut.SetValue(mat_first);
                return m_Exit;
            }
            if (!m_fusion || m_device != gpu)
            {
                if (m_fusion) { delete m_fusion; m_fusion = nullptr; }
                m_fusion = new ImGui::GridFlip_vulkan(gpu);
            }
            if (!m_fusion)
            {
                return {};
            }
            m_device = gpu;
            ImGui::VkMat im_RGB; im_RGB.type = m_mat_data_type == IM_DT_UNDEFINED ? mat_first.type : m_mat_data_type;
            m_NodeTimeMs = m_fusion->transition(mat_first, mat_second, im_RGB, progress, m_backColor, m_pause, m_dividerWidth, m_randomness, m_size_x, m_size_y);
            im_RGB.time_stamp = mat_first.time_stamp;
            im_RGB.rate = mat_first.rate;
            im_RGB.flags = mat_first.flags;
            m_MatOut.SetValue(im_RGB);
        }
        return m_Exit;
    }

    void DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        ImGui::TextUnformatted("Mat Type:"); ImGui::SameLine();
        ImGui::RadioButton("AsInput", (int *)&m_mat_data_type, (int)IM_DT_UNDEFINED); ImGui::SameLine();
        ImGui::RadioButton("Int8", (int *)&m_mat_data_type, (int)IM_DT_INT8); ImGui::SameLine();
        ImGui::RadioButton("Int16", (int *)&m_mat_data_type, (int)IM_DT_INT16); ImGui::SameLine();
        ImGui::RadioButton("Float16", (int *)&m_mat_data_type, (int)IM_DT_FLOAT16); ImGui::SameLine();
        ImGui::RadioButton("Float32", (int *)&m_mat_data_type, (int)IM_DT_FLOAT32);
    }

    bool CustomLayout() const override { return true; }
    bool Skippable() const override { return true; }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::keys * key) override
    {
        ImGui::SetCurrentContext(ctx);
        bool changed = false;
        float _pause = m_pause;
        float _dividerWidth = m_dividerWidth;
        float _randomness = m_randomness;
        int size_x = m_size_x;
        int size_y = m_size_y;
        ImPixel _backColor = m_backColor;
        static ImGuiSliderFlags flags = ImGuiSliderFlags_NoInput;
        ImGui::Dummy(ImVec2(200, 8));
        ImGui::BeginDisabled(!m_Enabled);
        ImGui::PushItemWidth(200);
        ImGui::SliderFloat("Pause##GridFlip", &_pause, 0.1, 1.f, "%.1f", flags);
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_pause##GridFlip")) { _pause = 0.1f; changed = true; }
        ImGui::SliderFloat("Divider##GridFlip", &_dividerWidth, 0.f, 1.f, "%.2f", flags);
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_divider##GridFlip")) { _dividerWidth = 0.05f; changed = true; }
        ImGui::SliderFloat("Randomness##GridFlip", &_randomness, 0.1, 1.f, "%.1f", flags);
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_randomness##GridFlip")) { _randomness = 0.1f; changed = true; }
        ImGui::SliderInt("Size X##GridFlip", &size_x, 1, 10, "%d", flags);
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_size_x##GridFlip")) { size_x = 4; changed = true; }
        ImGui::SliderInt("Size Y##GridFlip", &size_y, 1, 10, "%d", flags);
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_size_y##GridFlip")) { size_y = 4; changed = true; }
        ImGui::PopItemWidth();
        if (ImGui::ColorEdit4("BackColor##GridFlip", (float*)&_backColor, ImGuiColorEditFlags_NoLabel | ImGuiColorEditFlags_DisplayRGB | ImGuiColorEditFlags_NoInputs | ImGuiColorEditFlags_AlphaBar))
        {
            m_backColor = _backColor; changed = true;
        } ImGui::SameLine(); ImGui::TextUnformatted("Back Color");
        ImGui::SameLine(320);  if (ImGui::Button(ICON_RESET "##reset_backcolor##GridFlip")) { m_backColor = {0.0f, 0.0f, 0.0f, 1.0f}; changed = true; }
        ImGui::EndDisabled();
        if (_pause != m_pause) { m_pause = _pause; changed = true; }
        if (_dividerWidth != m_dividerWidth) { m_dividerWidth = _dividerWidth; changed = true; }
        if (_randomness != m_randomness) { m_randomness = _randomness; changed = true; }
        if (size_x != m_size_x) { m_size_x = size_x; changed = true; }
        if (size_y != m_size_y) { m_size_y = size_y; changed = true; }
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;

        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        if (value.contains("backColor"))
        {
            auto& val = value["backColor"];
            if (val.is_vec4())
            {
                ImVec4 val4 = val.get<imgui_json::vec4>();
                m_backColor = ImPixel(val4.x, val4.y, val4.z, val4.w);
            }
        }
        if (value.contains("pause"))
        {
            auto& val = value["pause"];
            if (val.is_number()) 
                m_pause = val.get<imgui_json::number>();
        }
        if (value.contains("dividerWidth"))
        {
            auto& val = value["dividerWidth"];
            if (val.is_number()) 
                m_dividerWidth = val.get<imgui_json::number>();
        }
        if (value.contains("randomness"))
        {
            auto& val = value["randomness"];
            if (val.is_number()) 
                m_randomness = val.get<imgui_json::number>();
        }
        if (value.contains("size_x"))
        {
            auto& val = value["size_x"];
            if (val.is_number()) 
                m_size_x = val.get<imgui_json::number>();
        }
        if (value.contains("size_y"))
        {
            auto& val = value["size_y"];
            if (val.is_number()) 
                m_size_y = val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
        value["backColor"] = imgui_json::vec4(ImVec4(m_backColor.r, m_backColor.g, m_backColor.b, m_backColor.a));
        value["pause"] = imgui_json::number(m_pause);
        value["dividerWidth"] = imgui_json::number(m_dividerWidth);
        value["randomness"] = imgui_json::number(m_randomness);
        value["size_x"] = imgui_json::number(m_size_x);
        value["size_y"] = imgui_json::number(m_size_y);
    }

    void load_logo() const
    {
        int width = 0, height = 0, component = 0;
        if (auto data = stbi_load_from_memory((stbi_uc const *)logo_data, logo_size, &width, &height, &component, 4))
        {
            m_logo = ImGui::ImCreateTexture(data, width, height);
        }
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size) const override
    {
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        // if show icon then we using u8"\uf37f"
        if (!m_logo)
        {
            load_logo();
        }
        if (m_logo)
        {
            int logo_col = (m_logo_index / 4) % 4;
            int logo_row = (m_logo_index / 4) / 4;
            float logo_start_x = logo_col * 0.25;
            float logo_start_y = logo_row * 0.25;
            ImGui::Image(m_logo, size, ImVec2(logo_start_x, logo_start_y),  ImVec2(logo_start_x + 0.25f, logo_start_y + 0.25f));
            m_logo_index++; if (m_logo_index >= 64) m_logo_index = 0;
        }
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatInFirst, &m_MatInSecond}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter       = { this, "Enter" };
    FlowPin   m_Exit        = { this, "Exit" };
    MatPin    m_MatInFirst  = { this, "In 1" };
    MatPin    m_MatInSecond = { this, "In 2" };
    FloatPin  m_Pos         = { this, "Pos" };
    MatPin    m_MatOut      = { this, "Out" };

    Pin* m_InputPins[4] = { &m_Enter, &m_MatInFirst, &m_MatInSecond, &m_Pos };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    ImPixel m_backColor {0.0f, 0.0f, 0.0f, 1.0f};
    float m_pause       {0.1};
    float m_dividerWidth {0.05};
    float m_randomness  {0.1};
    int m_size_x        {4};
    int m_size_y        {4};
    ImGui::GridFlip_vulkan * m_fusion   {nullptr};
    mutable ImTextureID  m_logo {nullptr};
    mutable int m_logo_index {0};

    const unsigned int logo_size = 13799;
    const unsigned int logo_data[13800/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x07070a00, 0x0a060708, 0x0b080808, 0x0e0b0a0a, 0x0d0e1018, 0x151d0e0d, 
    0x23181116, 0x2224251f, 0x2621221f, 0x262f372b, 0x21293429, 0x31413022, 0x3e3b3934, 0x2e253e3e, 0x3c434944, 0x3e3d3748, 0x0b0a013b, 0x0e0d0e0b, 
    0x1c10101c, 0x2822283b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 0x3b3b3b3b, 
    0x3b3b3b3b, 0x3b3b3b3b, 0xc0ff3b3b, 0x00081100, 0x03000190, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xcf003f00, 0xd22b8aa2, 0xa8a22820, 0x4ec7776b, 0x1b9da6d2, 
    0x19db986c, 0xf46800ff, 0x4d1a00ff, 0xf40b5cd9, 0xede12f57, 0x51e3fa6e, 0x26a12efb, 0xd13d36ef, 0xf6fb42e5, 0xaef2c71d, 0xa46494a2, 0xa22880ae, 
    0xf432a08a, 0x74694b8b, 0x784b5eb8, 0xb3ec8e9d, 0xc6fc2420, 0xb5b2bda7, 0x6dd9195b, 0x62220ca1, 0x71648c08, 0x2ebdf454, 0x8a4ee3ca, 0xeddc6159, 
    0x77c49d9c, 0xde2df53e, 0x9c156191, 0x651824d2, 0xdb3b888d, 0xb3d60782, 0x61d8e557, 0x4b5b5aa4, 0x5bf2c2a5, 0x6577ecc4, 0xe6270199, 0x96f66a34, 
    0x3c7369d1, 0x0d23f176, 0x084065b8, 0xa54585f9, 0x1a5776e9, 0x0ecb5274, 0xeee46ce7, 0xa8f7b923, 0x2d2beb75, 0x7896483f, 0x422ed9a2, 0x244fdca1, 
    0xd24c9ffb, 0x6f011bfb, 0x97b6b448, 0xb7e4854b, 0xcbeed889, 0xcc4f0232, 0x2dedd568, 0x78e6d2a2, 0x1b46e2ed, 0x1180ca70, 0x3ce70af3, 0x6addf138, 
    0x37f9da06, 0x92311389, 0x9e3ef276, 0x7babfcd9, 0xadecd254, 0x8a65e9f4, 0xc1b8ae1d, 0xef714fdc, 0x60c33b49, 0x5a59592e, 0xd60c8cb5, 0x293196d0, 
    0x7832c624, 0x4b7b35a8, 0x9eb9b468, 0x8691783b, 0x04a032dc, 0x4d8bc27c, 0x385bc222, 0xcd327864, 0xb777921a, 0x45ad8f24, 0x567669aa, 0xc5b274fa, 
    0x605cd70e, 0xf7b827ee, 0xd8e577aa, 0xa739bc08, 0x5ba14fd9, 0x129c3549, 0x3ccb6e3b, 0x8ff9494a, 0x4fad557c, 0x4a8fb04c, 0xb6b174bb, 0x861c5856, 
    0xed202811, 0xddacf43c, 0x2fd34107, 0x2e2e6874, 0xfbcab72d, 0x19f636b7, 0xfbd811c3, 0xc3438d55, 0x6d1a4c9a, 0x6ddad1d4, 0x5376e178, 0x00c131e6, 
    0x27a5de91, 0x8707b0c9, 0xf429fb34, 0xb326692b, 0xd96d4782, 0x3f498967, 0x3c8aef31, 0x41d9a747, 0x0dc95ca1, 0xedba119c, 0x084a24c3, 0x557c87f9, 
    0xd341077d, 0x2e68742f, 0xcab72d2e, 0xf636b7fb, 0xd811c319, 0x233e54fb, 0x37adb4d2, 0xb805dd4d, 0x1060e449, 0xdc718cf9, 0xcdf94ff0, 0xdd9e7d2d, 
    0xc247a903, 0xea5cf056, 0xc7f0a4b2, 0x0a09882a, 0x726718ea, 0x2d1ecdf3, 0x55db82b7, 0x38862089, 0x5409c094, 0x9b3ba350, 0x393c299e, 0x727d9f06, 
    0x106d2f2d, 0xf75142b1, 0xef3996b2, 0x1df263f3, 0xd05e57ab, 0x1a2dcb74, 0x6d7b8b7b, 0xaddda692, 0xc0328ebd, 0x9af53e77, 0xd4c7748b, 0xcb34d3d2, 
    0x47ab3409, 0x66661b7b, 0x12630981, 0xcfd14e92, 0x3de2ab4a, 0x0a0dca3e, 0xe06c48e6, 0x196ed78d, 0xcc475022, 0x3f8de23b, 0xfa4c9ac3, 0x5ad2ac6d, 
    0x4621796e, 0xc930e663, 0xabde1320, 0x990edaeb, 0x714fa365, 0x54b26d6f, 0xb1b7b5db, 0xe70e58c6, 0xf269b5de, 0x253c216c, 0xa5736965, 0xc3daf34a, 
    0x0cc8092b, 0xda3886f1, 0x7c5673bc, 0x41d9a747, 0x0dc95ca1, 0xedba119c, 0x084a24c3, 0x577c87f9, 0x0b8be13f, 0x9252476d, 0xc4bca81b, 0xb8014b58, 
    0x6f07728e, 0x56f158ad, 0xfda66797, 0xf990ec97, 0xdffd667e, 0xdcc63931, 0xb3e63e75, 0xb077f74f, 0x1c1e9bfa, 0xd0a7ecd3, 0xce9aa4ad, 0x65b71d09, 
    0xfc24259e, 0xf128bec7, 0x06659f1e, 0x36247385, 0xb7eb4670, 0x2328910c, 0x55f11de6, 0x4c071df4, 0xb8a0d1bd, 0x2bdfb6b8, 0xd8dbdcee, 0x63470c67, 
    0x8ff850ed, 0xddb4d24a, 0xe1167437, 0x43809127, 0x73c731e6, 0x35e73fc1, 0xba3dfb7a, 0xe1b5a90b, 0xb84f336d, 0xb3ace5f0, 0x234bdbd8, 0x4abccb6f, 
    0xdcedfcc4, 0xa6533c8a, 0x1cfef669, 0x1b0b96ba, 0x985da468, 0x8f548974, 0x5c817b9d, 0xd32087b7, 0xa545aeef, 0x2816a2ed, 0x52f63e4a, 0x6cfe3dc7, 
    0x6ab5437e, 0x990edaeb, 0x714fa365, 0x54b26d6f, 0xb1b7b5db, 0xe70e58c6, 0x0915b9de, 0x7ce67e3f, 0x54eef59e, 0xb5a575f0, 0xd13edbd7, 0x76db146f, 
    0x3610f36d, 0xd14cf73e, 0x6b4b1be3, 0x9efdb15f, 0x6f7728de, 0x5ca0e5dd, 0xadb8defd, 0x9ac33f3d, 0xac6dfa4c, 0x796e5ad2, 0xe6634621, 0x1320c930, 
    0xdaebabde, 0xa365990e, 0x6d6f714f, 0xb5db54b2, 0x58c6b1b7, 0xbadee70e, 0x63a71a5c, 0x454da74e, 0x82485714, 0x5e181fb9, 0xd95bdeab, 0xe78fec1c, 
    0x00ff1e93, 0x5de76ffd, 0xa2436775, 0xfaac1641, 0x26599691, 0xc0d8f07c, 0x9c1ea7cf, 0x2b394d54, 0xd493a321, 0xb5698b75, 0x28db5b3b, 0x00a089e5, 
    0x40066030, 0x993e743c, 0x2a43dd15, 0x194b0a4f, 0x07863aca, 0x51831ad4, 0xedd4e1d3, 0x82e5b40d, 0xd42b0892, 0xb14ee911, 0x381b5bb4, 0x754792ed, 
    0xc617608c, 0x8c52f871, 0x16b85b5c, 0xd08aa228, 0x61973646, 0x49d1e9e7, 0xf3a8bbf6, 0x3039969f, 0xa5da93a3, 0xbb7cd3bb, 0xb7ed9f39, 0x3b36b68d, 
    0xc7835c5a, 0x2e2d2a7e, 0x3a4df6de, 0x00ff8a26, 0x279c43ca, 0x9e1c1b92, 0xaddd2df5, 0xcfccd9fa, 0x1b51efa8, 0x8c42be12, 0x64cd748c, 0xc8b0bb97, 
    0x3f0fbbb4, 0xb54f8a4e, 0xfc9c47dd, 0x1c85c9b1, 0xe283d59e, 0xc5dd1096, 0x262e2e66, 0xccdf1b55, 0xa627d87d, 0x5be70f3f, 0xecbd5dda, 0x154d749a, 
    0x879400ff, 0x36244f38, 0x96ea3d39, 0x06b4a0a1, 0xc65b4a7d, 0xc08d539a, 0x407206c6, 0x9b642afc, 0x720e8886, 0xb644c85b, 0xd299dbd3, 0x9073f848, 
    0x711bcf31, 0xf56d5ded, 0x35647faa, 0x32b777cc, 0x0fb02aa3, 0x45825426, 0x2e930e45, 0x1347a3a9, 0x92846cde, 0xed407942, 0xebf49e20, 0xc3e63aad, 
    0xdebe6846, 0x00308665, 0x6e1c1043, 0x2d46e91d, 0x4dbb0526, 0x85b3cc37, 0xbb78dbfe, 0x65b553a3, 0xe2761cc0, 0x3c2cd5a2, 0x3e593a8d, 0x312675d7, 
    0x5426c9f2, 0xb6543bf2, 0x67edb796, 0xb1a3260b, 0xf9426a4c, 0xd331700a, 0x6fa91635, 0x2b9d1e7b, 0xa0e67f4b, 0x0bc953c6, 0xb67a479e, 0xa580ddbd, 
    0x6a1fe9a0, 0xfb9ba0d1, 0xdb1dfe46, 0xdaa648be, 0x8123e6a3, 0x68a8b18a, 0x759b569e, 0xa2a6f627, 0xda7621fb, 0xc05619f7, 0x958e113c, 0xd4b3415f, 
    0x7ba0d1e5, 0xf1ec5b7d, 0xfb63db1d, 0x98dfb63a, 0x506335f7, 0x4d93d5b1, 0xaf3569ba, 0x2c171631, 0xb851659f, 0xb567e460, 0xc0ee5e4a, 0x8f74d057, 
    0x4dd068b5, 0x0e7fa3fd, 0x5324dfed, 0x11f3516d, 0x6b61c5c0, 0xf6a2a6e4, 0x707375ab, 0xe499f190, 0xc577f3df, 0x2d6e786c, 0xff4bef4e, 0x3ed54700, 
    0x145214cd, 0xbf3afb54, 0xfb4fcea1, 0xe1a90ed5, 0x3aedb4f9, 0x1eeaecee, 0x318f996f, 0xcb6f204c, 0xe738f98e, 0x05af869a, 0x26153364, 0x241886b7, 
    0xbaa44b86, 0x58d93b56, 0xddcf0b05, 0xfa7f9023, 0xbaebd2f5, 0x69b4d94f, 0xbfd1fee7, 0x92df6e9b, 0xcb29f759, 0x41c5c801, 0x5ad7e8a6, 0x46e087a7, 
    0xe47684d4, 0x80bc58b1, 0xf8c79076, 0xce5f9fb3, 0x35ecd6a6, 0x6f0e6d1b, 0xe1f3563b, 0xf6c5a040, 0xc0fc5c75, 0x149a730e, 0x746d8b5a, 0xa29fce02, 
    0xac6dba79, 0x8a9ada9f, 0x6a1b856f, 0x2057615c, 0x553a0670, 0xfb487b7d, 0xdf3c8d2e, 0x6df337da, 0x364bf2db, 0x1c303fe5, 0x3e8d558c, 0x367d56c7, 
    0xbcd6a3d5, 0xaa5068b4, 0xd14e957d, 0xf59e8181, 0xd4b35e5f, 0x7ba7d1e2, 0x11ed5b8d, 0xfba3bb0d, 0x98efae3a, 0x7b6d1577, 0x408f08bb, 0xd3b820d0, 
    0xbb5bbe62, 0x309426b8, 0x78810c63, 0x7b3a460c, 0x78aab10a, 0x34610372, 0x4e5fdff2, 0x82ee44d0, 0x40004359, 0xa8b0a7cf, 0x4e3d1bf4, 0xb7071a5d, 
    0x11cfbed5, 0xb33fb6dd, 0x8ff96dab, 0x0b355673, 0xdb34591d, 0xf35a93a6, 0xc9726111, 0x861b55f6, 0x507b460e, 0x0cd8e492, 0xf7240d3f, 0xd7666df7, 
    0x1cc370d7, 0x9461d545, 0xfee10eae, 0x49f5b326, 0x5bd33767, 0xe93473cb, 0xe689ae04, 0x0e8058c8, 0x786ea53f, 0xbbb9444f, 0xd7fe92b7, 0x8723fb51, 
    0x07e49130, 0xe79ec2c8, 0xf1a3e2fc, 0xd3658737, 0x9bbbe32c, 0x3249fb50, 0x21796079, 0x4ecc9d31, 0xf3e77b72, 0x365257ae, 0x652eeae5, 0x0c3f1a7b, 
    0xf8a733fc, 0xde96559f, 0x17426dfa, 0x4b8a688f, 0x640a9539, 0x9cca3939, 0xdf311df4, 0xcde343ad, 0x4217e824, 0xfa461dce, 0x549626e6, 0xe0367161, 
    0x008e1176, 0x52c16f15, 0x9c3ebaeb, 0xb7267af7, 0xe3b60ff6, 0xa4b25fcd, 0x0e58d8b9, 0xa7a73e5b, 0x3ef153ad, 0x62cda89f, 0xac86dad7, 0x9503da6e, 
    0x4b420506, 0x7e900730, 0xa5ce5e95, 0xdc7ad0af, 0x9ee8a7b5, 0x276b9b6e, 0x9ba2a6f6, 0x97da46e1, 0x1cc85518, 0x5f958e01, 0xcb3ed25e, 0xf6374fa3, 
    0x76dbfc8d, 0xb9cd92fc, 0x2307cc4f, 0x0d1afd14, 0xb748ef5a, 0xc9633d9a, 0x3f56bb4d, 0x0a6d2bb3, 0xf47b8e4a, 0x8b24feaa, 0xffd2b453, 0x4f35d200, 
    0x812cc5b4, 0xa9ce3e19, 0xfe9173ea, 0xc9ed6eed, 0xc362017b, 0x376a72c5, 0xa7c3da91, 0xc199bcaa, 0x021cc879, 0x52edbb7f, 0x9f257e6a, 0x2758b949, 
    0x90998db0, 0x48702938, 0xa3ee48c6, 0x0f9fb9d2, 0xdbade9b4, 0xdabfadb5, 0xc5b61b26, 0x94ef26bc, 0x8ed393e7, 0x5e8acf6a, 0x334e4dee, 0x49f6677b, 
    0xf384913c, 0x6e6ee443, 0xca1f3f72, 0x97cff6b3, 0xd84b437d, 0x1b356cea, 0x3bce46dd, 0x54e06ca8, 0x700f3893, 0xfe48f0c0, 0xfa17b5e7, 0x679dee8d, 
    0x70d6d425, 0x848c4732, 0x207962b8, 0xb3de737f, 0x4ecd1b34, 0xb7041a2d, 0x10d17ed2, 0xb44fb6dd, 0x8ff9ee2a, 0xf5d74d63, 0x89f4410d, 0x16d3ba61, 
    0x372a24d9, 0x9063959b, 0x2707f0c0, 0xeecf6da5, 0x36ad0ddc, 0x2cd550eb, 0xd282bd23, 0x389363d9, 0xf0c0720f, 0xd287ec48, 0x50eb4a8d, 0xbd24ecd2, 
    0xa3d9d29e, 0x7209198f, 0xee40f2c4, 0x3cb2d683, 0xa80be237, 0x2dacc874, 0x68b9d474, 0xb5f6738b, 0xbe253946, 0x4fef19e9, 0xa8b52ef1, 0x6fcba24b, 
    0x997da475, 0x27516526, 0x41f055da, 0xf60fd0dd, 0x57da976b, 0xfb19fabd, 0x7644defc, 0xbb7b30be, 0xd3a36db8, 0x519d79c0, 0x24c04f4b, 0xa2969fe3, 
    0xe38400ff, 0xf9dfa1fe, 0xb100ff1f, 0x4a23adac, 0xbad6ccd4, 0x9d9fbd95, 0x5f244a12, 0xdaee2ade, 0x743c39dd, 0x36bad7aa, 0x2642a7a1, 0xd1f2b7ba, 
    0xd43b689b, 0xf6b1d7f3, 0xeeea39ad, 0x7e696b6a, 0x6fddbc25, 0x0e6fc1a7, 0x9021c25d, 0xf1ddac9e, 0xbf1aabf5, 0x1b0b7588, 0xe63a8d9b, 0x5db0d8de, 
    0xc796d1ac, 0x3ee3b9cc, 0x6d74b3c6, 0x4b925613, 0xcbd64e4d, 0x122585cf, 0x7751ef2f, 0x27476e6d, 0x5aa5478e, 0x6a6db4d7, 0x54ebf6f6, 0x23f24d97, 
    0x9ec71dda, 0x802ab48d, 0xd2d3f37b, 0xbdd2f6b2, 0x31d74dae, 0xd5bc427f, 0xf4eff42e, 0x7104ad48, 0xb3de4fb9, 0xc35ecf6e, 0xf3768dde, 0xbfd3b454, 
    0x31b4e2d2, 0x743fe1c8, 0x7b3dbbcd, 0xe1a56a8f, 0xacc8fb7b, 0xd3b4b7e6, 0x4db6d5be, 0x4c70deec, 0x7f0e6064, 0x27be34dd, 0xc69abdbe, 0xf5f46e28, 
    0x65e8fdb5, 0x2757683f, 0x9e838e00, 0x9ba36bfd, 0x4d7ddcdc, 0x9b750d5d, 0xad09229d, 0xdb42c412, 0xfbaef9b6, 0x3807f1be, 0xb846eb18, 0x91b6cdba, 
    0x6269d73c, 0xbcbb5d61, 0x78df7da7, 0x758c8c01, 0xf11d1eaa, 0x50d6d63c, 0xcb697069, 0xc1ee913c, 0xd93d2237, 0x75047862, 0xe29fd6e7, 0xcbdc115f, 
    0x75992e63, 0xe699fda5, 0x68df6055, 0x3d1b800f, 0xb53efb87, 0xe45bcfcd, 0x79f3ef67, 0xd686f417, 0x7babb4af, 0x04ec688b, 0x91a87645, 0x76ca77df, 
    0x55ed81f3, 0xad3643fc, 0xbd6ea661, 0x95a2cd8e, 0xdfe57ec2, 0x1ff77a76, 0x195ed4ec, 0xd223afd7, 0x49d3c6d6, 0xb3d957fb, 0x13d0feb9, 0x822331ef, 
    0x4395bf3e, 0xf25adde2, 0x5b0bc6ea, 0x99ec33bd, 0xf356cc97, 0x08b09bc4, 0xb47f0023, 0xf9d6f329, 0xf2e6df0f, 0x6bdc0b0f, 0x6b6f7617, 0x5a822c60, 
    0xf97d26e3, 0xdf1e8b3b, 0xe7d7598d, 0x31ed74d7, 0xdad3e08d, 0xf984c929, 0xca0dcb3b, 0xa8817d7d, 0xb5ba243c, 0x56b7ac85, 0xe1da57ba, 0xfbd6c6ba, 
    0xa58d4742, 0x9ffbe081, 0x9778add2, 0xd2546bfb, 0xfda24b8a, 0xce1b389a, 0x8fd43e79, 0x389e53c0, 0xb3f6a9f5, 0x9ca0afbd, 0x9191379f, 0x4bdd8be1, 
    0x0b1696f7, 0x6762de6b, 0x7e3bec0d, 0xb5882715, 0xdb28523d, 0x425bbd4d, 0xd0724526, 0xf76ee086, 0x3c54ab3e, 0xa6357737, 0x6d8ffea9, 0x8c6599f6, 
    0x1398a7a2, 0xfd27e7d0, 0x6e8977da, 0xd4d4b967, 0x690bdbdc, 0x31a62012, 0x3cb99328, 0x4aafd391, 0x7bf79bdf, 0xbc37f59a, 0xbeae6f3d, 0x67d66e89, 
    0xed0ef24f, 0xdffd76be, 0xe338e778, 0x0df168ae, 0x259ababe, 0x3f1d5ec3, 0x79771bc8, 0xe17df73b, 0xb88e678c, 0x8c2f5aaa, 0x41a79b0e, 0x29018ba7, 
    0x38734042, 0xf7c47240, 0xa6f5751c, 0xfe321eeb, 0xb1e6d2d5, 0xe69507fb, 0xedfcf9ed, 0xd303c3d8, 0x39acf468, 0xcfd0edea, 0x36f2e6df, 0x116fdb34, 
    0x606a9936, 0x6194673a, 0xcdfc9b42, 0x678c76db, 0xbc55f11d, 0xa6ae6f43, 0x87d77089, 0xdd06f24f, 0xdffd4ede, 0xe3196378, 0x479a29ae, 0xda30668c, 
    0x57fab6e9, 0x23442a9d, 0xbb80f45f, 0x575eafb6, 0x880f958e, 0xcd3551bc, 0x7193c69d, 0x569efda6, 0xe1f9b8db, 0xb01bf2f6, 0x9ea3f3e7, 0x9e4bc8b7, 
    0x5b0f9fe5, 0x5ba2afeb, 0xfcd399b5, 0x9d6fbb83, 0x39de77bf, 0x9aeb38ce, 0x785ba9b3, 0xa3cb7489, 0xa13cd339, 0xe6d9970b, 0xe7b4db6e, 0x8f8aef19, 
    0xb4fa77c3, 0x76b40d3a, 0x61da2fba, 0xf6cbb61b, 0x31df4da4, 0x3ca707cf, 0x514fad55, 0xbb4a9fd6, 0x2a0f7449, 0xc9c38136, 0xa36dc4f6, 0x39c6c969, 
    0xa9b54fc5, 0x524e5c7b, 0x037d39e6, 0x72fa17c4, 0x1d679fae, 0x02f379b3, 0x0cc7ca0c, 0x4e8f1dd8, 0x6de24905, 0x63b9526b, 0xa8a55fa6, 0xe8beba30, 
    0xf1767203, 0xa537fad4, 0xf64f5a62, 0x366ec85b, 0x57a4f2ee, 0x07679cdb, 0xc51aab38, 0xd76a5ed3, 0x535ebc13, 0xbbc90a96, 0x75000876, 0x96afd2ef, 
    0x5e53bf36, 0x479d7b55, 0xd7f5ad87, 0xccda2dd1, 0xdd41fee9, 0xbbdfceb7, 0x1ce71cef, 0x211ecd75, 0x4453d7b7, 0xa7c36bb8, 0xef6e03f9, 0xbcef7e27, 
    0xd7f18c31, 0xbc851715, 0x5ad17a41, 0x8e7e7ae8, 0x3e3fd7f7, 0x5fb049c5, 0x1de339ef, 0xa6f67b86, 0xd3c49378, 0xa4736bcd, 0x669f695d, 0x7cdced98, 
    0x0c79fbf0, 0xf7780e3a, 0x2f95f6a9, 0xff7e866e, 0x47773100, 0x3a04f1b0, 0x36dbb245, 0x0e64619a, 0x7693619e, 0x1ce7e61b, 0x25deaa77, 0x47dbd6b1, 
    0xc39a6f69, 0xcfd585c9, 0x27715f90, 0xfe781de5, 0xc6334d2a, 0x9a1624b2, 0x9b5f5a7c, 0x8742aa22, 0x1c771bed, 0xc6c31f05, 0xe3b1ae6a, 0x2e5ded2f, 
    0x79b01f6b, 0x9fdf6e5e, 0x308cddce, 0x4a8f363d, 0xd0edea39, 0x1eca3d17, 0x35ad691b, 0x67013568, 0x16313c73, 0x5844e40d, 0xf418a9e4, 0x8bc72aee, 
    0xbf519f6e, 0x5d59f08a, 0x08b1c4db, 0xcc1671b3, 0x00ff58b6, 0x317c5623, 0x76fae9ac, 0x5737249b, 0xc5b45b1e, 0x8cc7d880, 0x517bd801, 0x4f677de2, 
    0xe1d874d4, 0x1df3b8b5, 0xc6460c66, 0xe38e601c, 0x71f6b6de, 0x34f535b7, 0x5f72bdb7, 0x43b1eb0f, 0x966245a7, 0x44139777, 0x2082b018, 0x3d2716fc, 
    0x3f55dc73, 0xcd5c5e17, 0x5833b435, 0x972fd9dd, 0x445daae6, 0x20076763, 0xe3a80730, 0xfca8f583, 0x695aa923, 0xdeb3ac7a, 0xd046e5cb, 0x6e690714, 
    0x0fec2977, 0x891fada1, 0xaf9be61a, 0xfa64da6a, 0x23dacf5d, 0x09864b83, 0xb6c9960f, 0xf3912d45, 0x91a39e01, 0xd63e35c7, 0x1fe8dd4f, 0xbde1a968, 
    0xda12591f, 0x16ba96ea, 0x4b6e77ad, 0xa3b52583, 0x6fe33aba, 0x361c0c04, 0xb56acf73, 0x998bbbe2, 0x2200fff4, 0xb451274d, 0xe60c6568, 0x5ea0dce6, 
    0xe4d0e708, 0x193eed8a, 0x5ec2bbf8, 0x9b6dd01c, 0x1b9ed753, 0x962cb2bd, 0x5556daa2, 0x553292cb, 0xfe603c48, 0x0bf19335, 0x88275ac6, 0xb33fd462, 
    0x4a998bee, 0xeac4d408, 0x3c2f2b58, 0xda4b638f, 0xb7092b49, 0xfef0c2d8, 0x541a1cb9, 0x7965ab76, 0xe69dc33b, 0x96018318, 0x3ca87724, 0xe52dab4f, 
    0x3b1b5084, 0x77f376bb, 0x015b3c83, 0xcf711000, 0x2b3ca8b8, 0xbfe959aa, 0xde5cfb6a, 0x6fb3995f, 0xbb714eca, 0xa3b8073d, 0x9ea55ac5, 0xb25ff6a5, 
    0x7b79e64d, 0x63a47cf7, 0x7bd4713b, 0xf79bdf1a, 0xd3d4957b, 0x6d8ae7f0, 0x7dabb42c, 0xcdddda38, 0x18e26e3a, 0x5b2c67c3, 0xd5d0738e, 0xd6c55b9d, 
    0x6773616d, 0x32f49525, 0x892a03cf, 0x10d40b62, 0xae995e0f, 0x86ba414f, 0xe28259cb, 0x9b44f6e1, 0xc60936b7, 0x5adf8e54, 0xfb7be2b1, 0x8e52476d, 
    0xc47c596b, 0xb4934258, 0x7f4f728e, 0x287b73ad, 0x1ea99bdb, 0x73b937ce, 0x61cfd3c2, 0x369df214, 0xdbe778fa, 0xb080e0b1, 0x7f9edd38, 0x5b135f1a, 
    0xbaeab76a, 0x28b5d1a0, 0x2b8c222c, 0x2ab33d4d, 0x7b1f5b02, 0x5e0752a7, 0xbfe1abb5, 0x1a366912, 0xd5adb50d, 0x6e3297df, 0x9c5bbedc, 0x811c8965, 
    0xf1a46be8, 0x377c8e17, 0xefa6f07d, 0xbcd4b643, 0x9b4242cd, 0x1924f261, 0xe6c7cac4, 0x9e808e2b, 0x3549d5b4, 0x6e13d0cb, 0xddf36856, 0xe6d6410b, 
    0xb652df92, 0xab5bf5d0, 0x96a3e170, 0x5fddd1d6, 0x0672030e, 0x5e87010f, 0xe28a27b5, 0xedfb9ebd, 0xf6776912, 0x1f610c89, 0x0ae536ed, 0x9dbe9e9c, 
    0xc30f7a45, 0x4b78173f, 0xb30d9ac3, 0xc3f37a6a, 0x9245b677, 0xca4a5bd4, 0x4a4672b9, 0x1f8c07a9, 0x217eb2c6, 0xf144cb78, 0xf6875a0c, 0x2973d17d, 
    0x9d981a41, 0xe765054b, 0xe768ec91, 0xbe6d5869, 0x9de121c7, 0xe72d0d5e, 0x569a6249, 0x8945a09c, 0xf18c2441, 0xe251dcd7, 0x510d5e6d, 0x9aa248e0, 
    0x75b88026, 0x9c204095, 0xd6d8d771, 0x412a9f5e, 0x23cd5aa9, 0x46e6486d, 0x02e08c63, 0x9550a309, 0xa6aed427, 0x9324b78d, 0x32c6293b, 0x9c562409, 
    0x1dc592cf, 0xede28346, 0xa0d14b3f, 0x961b9eb2, 0x28d93d92, 0x4f2c47aa, 0x6bb51e76, 0x9f9ef153, 0x98dd853d, 0x6449bcb6, 0xa2c3e289, 0x1c41ac8d, 
    0xc2b5defc, 0x54428dd5, 0x9aba529f, 0x4c92dc36, 0xc818a7ec, 0x7b589124, 0xb347ee38, 0xd05fee8d, 0xd4b7bb21, 0xa701f52d, 0xee02cfdd, 0xb684a1f9, 
    0xdd8e2378, 0xc3764d6a, 0xbab8bb53, 0x7f9306d6, 0x1a2a9015, 0x55996d69, 0x6e79150e, 0xee779c83, 0x7ec37f2b, 0x346cd224, 0xab5b6b1b, 0xdd642ebf, 
    0x38b77cb9, 0x033912cb, 0xb1d6d6d0, 0x5d0f4fe3, 0xf4d5337c, 0xf70d3578, 0xd1c632d7, 0x37c8e445, 0xc993f100, 0xf5140e5c, 0xcba9a93d, 0xa480b6e1, 
    0xcf63addc, 0xaf33bcec, 0xddf1166a, 0x957a685a, 0xed84b4d5, 0x75470b96, 0x101c1c6c, 0x7e047930, 0x47eb5e15, 0x9b432cd5, 0xd8ee36cd, 0x74fe7046, 
    0xb97e9b0c, 0xfcaa571c, 0x8477f133, 0xdba039bc, 0x3cafa736, 0x59647b37, 0xacb4452d, 0x642497ab, 0xc17890aa, 0xe2276bfc, 0x4fb48c17, 0x7fa8c510, 
    0x3217dd67, 0x89a91194, 0x5e56b0d4, 0x86c61e79, 0xc7be4dd9, 0x6d4ea009, 0x4479abf5, 0x7757ce32, 0xcc5de1ee, 0x51d0537e, 0x356eceaf, 0x324c89ab, 
    0xee6f5bc0, 0x3eac5de6, 0xfc53d451, 0x86057937, 0x75756dbd, 0x6e0a9727, 0x1927d8dc, 0xdc030752, 0xc84be2d1, 0x9bebf52f, 0xc83c59ab, 0xc1d66e5f, 
    0x7880c219, 0x99abe23e, 0xef023dfc, 0xe141c79a, 0x595a14bf, 0x6fda76e9, 0xb8272fd9, 0x312cdf4d, 0xb758ce86, 0x5aa5e71c, 0x695b3cd6, 0x299b1bf6, 
    0x9ae06f6c, 0x4d501978, 0x80a05e10, 0x72cdf47a, 0x82bc1bbe, 0xbab65ec3, 0x85cb93ba, 0x136c6e37, 0x8103a98c, 0x8bd76aee, 0x534d2bb5, 0x297b8a55, 
    0x00d6d87c, 0xce2bed84, 0xf5c03de6, 0xe68a9315, 0xfb5c7033, 0x9ae97019, 0x5842c485, 0x8d656e2c, 0xcc443aba, 0x4d05e20f, 0xadac8b3e, 0xfa84baac, 
    0xa3dbea5d, 0xede1f67e, 0x479222dc, 0x24032356, 0xd5b5be8e, 0x9ac46ff8, 0x6d83864d, 0xe577756b, 0x2fb79bcc, 0x6219e796, 0x1a7a2047, 0x693cd6da, 
    0x86afebe1, 0x068fbe7a, 0xe6fabea1, 0xbc28da58, 0x1ee00699, 0x812b7932, 0xb5a79ec2, 0xacbd9352, 0xb5729352, 0x16c06b8e, 0xe295d6da, 0x50c4374d, 
    0xedad1ae8, 0xbdc44e94, 0xbdc99ba5, 0xa46d6448, 0x75a41e60, 0x289e59ed, 0x5897beb7, 0x4b97bdba, 0x9588b4be, 0xb2db5c04, 0xe785c214, 0x5ff49ad3, 
    0xf02e7e86, 0x1b348797, 0xe7f5d466, 0x8b6cef86, 0x95b6a825, 0x8ce47295, 0x180f5295, 0xfc648d3f, 0x8996f142, 0x0fb518e2, 0xe6a2fbec, 0x31358252, 
    0xcb0a963a, 0xd3d823cf, 0xefc6bd77, 0x34e1d87b, 0xb7bf7b7b, 0x65c55e5b, 0x4e303c73, 0x8b18e6ac, 0xf5912074, 0xb2b855c5, 0xf6dbb3bb, 0xdfa059ab, 
    0x656cbe9d, 0xcdb88e73, 0xd7115e75, 0x4a2fcdb4, 0x9fdb0b96, 0xb89c462a, 0xdab8191b, 0x863eb0a3, 0x58cbf8aa, 0xc77ed5b0, 0xdffc19f6, 0x00ff7e2b, 
    0xdb199791, 0x1a7aa08e, 0xb0d67c57, 0xac359f94, 0x50737869, 0xb64283b2, 0x23c86b8e, 0x7995dd75, 0x1ef31154, 0x9e5aabd9, 0x952661a7, 0x6c7d8976, 
    0x0a38d0cc, 0xda495225, 0xf04eeb78, 0xdca799b6, 0x59d67278, 0x91a56dec, 0x25dee5b7, 0xee767e62, 0xb4d55b45, 0x1a3d369d, 0xebf448f6, 0x90b77554, 
    0x082a2cab, 0xe2204f21, 0xbdd5fab5, 0x2bea12db, 0x6de1a9d8, 0xf0b74f4f, 0xdf53ace5, 0xef22455b, 0xa4aa3cca, 0x9ad8ed7c, 0xe9a9533c, 0xba1c1ef7, 
    0x69eb0b8a, 0x44986d64, 0x9d9f5895, 0x775e037b, 0xd5ec6345, 0xb9663fee, 0x1c1e77ae, 0xd0a02cd4, 0xf29aa3ad, 0x6577dd08, 0x7c04555e, 0xf168b6c7, 
    0x3e65a11e, 0x371c7385, 0xb7ed4890, 0x27a9920a, 0x57b31de6, 0x69a62d3c, 0xb51c1ef7, 0x691b7b96, 0x77f96d64, 0x9d9f5889, 0x8a4791bb, 0xdf3ecd74, 
    0xc15297c3, 0x8b146d63, 0x2a910eb3, 0x70aff391, 0xe9ac6f2b, 0x7b216fc9, 0x9763cd45, 0x16c495f0, 0x3cafacda, 0x02a6c4d1, 0x19053b03, 0x5573bcdc, 
    0x732c47bc, 0x4332b7eb, 0xb78dc822, 0x3f088c0c, 0xe65def28, 0xb2e9a493, 0x4952d668, 0xb5bb5aa7, 0xa19965bc, 0x392a4952, 0xc5531527, 0x6f9f663a, 
    0x60a9cbe1, 0x458ab6b1, 0x954887d9, 0xb8d7f948, 0xbab69f15, 0x8a2ab0e4, 0x25bc32f6, 0xa56d697b, 0x43dd934a, 0x0ac91913, 0xda3805f2, 0x7c56f3bc, 
    0x4f59a847, 0x0dc75ca1, 0x6d3b12e4, 0x49aaa4c2, 0xd56c87f9, 0x9a690bcf, 0x2d87c77d, 0xdac69e65, 0x5d7e1b59, 0xe72756e2, 0xbd55e46e, 0x63d3495b, 
    0x8f64afd1, 0x5b47b54e, 0xc2b20a79, 0xf21482a0, 0xb3fe2a0e, 0x7560c965, 0xf054ec15, 0xdba7a7b6, 0x29d672f8, 0x91a2adef, 0x551ee577, 0xec763e52, 
    0xd4291e4d, 0x0e8ffbf4, 0xf505455d, 0xcc36b2b4, 0x4fac4a22, 0xae81bdce, 0xc5d0c247, 0x583be271, 0x8d2589a7, 0x431de5b7, 0x6337f203, 0x8a618a47, 
    0x5177c4df, 0x1a451241, 0x8522c2ec, 0xc25ee403, 0xc25ce5b1, 0x00ff5ce4, 0x2be1b389, 0x2a6d4bdb, 0x18ea9e54, 0x5748ce98, 0xd5c62990, 0x5b3c9ae7, 
    0xa573697b, 0x435d9044, 0x2ac1092b, 0xda380692, 0xbe5af1dc, 0xfb34d316, 0xcb5a0e8f, 0xb2b48d3d, 0xc4bbfc36, 0xddce4fac, 0x3ac5a3c8, 0xe16f9f66, 
    0xb160a9cb, 0xd9458ab6, 0x48954887, 0x15b8d7f9, 0xe434d6b7, 0xe6a2fdb0, 0x2e69c3b1, 0x5236eb91, 0x6e11c148, 0x70cc2c23, 0x26390c00, 0x4dd2598d, 
    0xd848f666, 0x85c4353a, 0x05414e59, 0xa2d7208f, 0x9b4e3a69, 0x24658d26, 0xbbab759a, 0x9a59c65b, 0xa3922415, 0x3c557192, 0xf669a653, 0x96ba1cfe, 
    0xa4681b0b, 0x8974985d, 0x7b9d8f54, 0xaef35881, 0x31175560, 0xe24af8cb, 0x57566d0b, 0x53e2689e, 0x829d0101, 0x395eee8c, 0xbb313eab, 0x1ffbbab6, 
    0x9b22eed9, 0x5bdefd6e, 0xebddc786, 0xb6f0df8a, 0x78dca799, 0xec59d672, 0xb791a56d, 0x6225dee5, 0x45ee767e, 0x9db4d55b, 0xf61a3d36, 0x54ebf448, 
    0xab90b775, 0x21082a2c, 0xb4e2204f, 0x965cf6f6, 0x58735107, 0x4f6de1a9, 0xe5f0b74f, 0x5bdf53ac, 0xcaef2245, 0x7ca4aa3c, 0x3c9ad8ed, 0xf7e9a953, 
    0x8aba1c1e, 0x6469eb0b, 0x9544986d, 0x7b9d9f58, 0x041e5903, 0xfbbcb4b2, 0x61adda77, 0xb797679f, 0x33368ccd, 0x1ecd38bb, 0xb3b4b23b, 0x6dd90ffb, 
    0x997f8361, 0x2e8ccabb, 0xc519b771, 0x4dce6563, 0x9db1b497, 0x2d882be1, 0x795e59b5, 0x044c89a3, 0x330a7606, 0x8fe678b9, 0x7341dc16, 0x4df0c4aa, 
    0x0020aa1c, 0x9d6130b2, 0xd415c7cd, 0xd34c5b78, 0x6b393cee, 0xd236f62c, 0xeff2dbc8, 0x3b3fb112, 0x148f2277, 0xbf7d9ae9, 0x82a52e87, 0x1729dac6, 
    0x55221d66, 0xe05ee723, 0x4edbde56, 0x17ed174b, 0x097e8a35, 0x34ad2cd4, 0xbcb9a369, 0x0c371782, 0xa92ac942, 0x82f36a23, 0xef8ea76a, 0xc33e2f6d, 
    0x67a85bf6, 0xf26ee6d9, 0xed8c0da4, 0x165d71c6, 0xb2e9a493, 0x4952d668, 0xb5bb5aa7, 0xa19965bc, 0x392a4952, 0xc5531527, 0x6f9f663a, 0x60a9cbe1, 
    0x458ab6b1, 0x954887d9, 0xb8d7f948, 0x9e6b8a15, 0x7bae69e6, 0x2587779c, 0xda760d8e, 0xd158a449, 0x809d6577, 0xe83de503, 0xcfb11cf1, 0x0cc9dcae, 
    0xdc36228b, 0xfc203032, 0x3e76bda3, 0xfb34d316, 0xcb5a0e8f, 0xb2b48d3d, 0xc4bbfc36, 0xddce4fac, 0xb67aabc8, 0xa3c7a693, 0x9d1ec95e, 0xf2b68e6a, 
    0x41856515, 0x1ce42904, 0x4edbbe56, 0xabea165b, 0x6de1a9d8, 0xf0b74f4f, 0xdf53ace5, 0xef22455b, 0xa4aa3cca, 0x9ad8ed7c, 0xe9a9533c, 0xba1c1ef7, 
    0x69eb0b8a, 0x44986d64, 0x9d9f5895, 0xfc54037b, 0x5dd9a713, 0x7349d3e8, 0x2ece0467, 0x25920618, 0xe3d50662, 0x6de35124, 0x46d3ca3e, 0x386b4b86, 
    0xa0707321, 0x922a71b4, 0x0219b736, 0x22e7b2b2, 0x34e49ccb, 0x5bf558c7, 0xab0a7647, 0xe0c4123a, 0x4673b801, 0xab26eba6, 0x95c1e876, 0x1c1872a7, 
    0x6b1e3782, 0x99b6f0bb, 0x7278dca7, 0x6dec59d6, 0xe5b791a5, 0x7e6225de, 0x1e45ee76, 0xfb34d329, 0x4b5d0e7f, 0x52b48d05, 0x443acc2e, 0xbdce47aa, 
    0xa73dadc0, 0x8bf634d9, 0x27bdc59a, 0xd163d356, 0x5193a3ac, 0x785b47b5, 0xa04c2bc3, 0x46701482, 0x758aa76a, 0xc3e33e3d, 0x7d415197, 0xb38d2c6d, 
    0x13ab9208, 0x6a60aff3, 0xe9a493de, 0x52d668b2, 0xbb5aa749, 0x9965bcb5, 0x2a4952a1, 0x53152739, 0x9f663ac5, 0xa9cbe16f, 0x8ab6b160, 0x4887d945, 
    0xd7f94895, 0xb79215b8, 0x31b78a31, 0x1b7ec357, 0x1bf46fd2, 0x4fabab6b, 0xb9dd6732, 0xc319c7bc, 0xd0073810, 0xc24fad55, 0x95be2dda, 0x5b563c77, 
    0x74078e64, 0x109c6b3e, 0x8bf58ea4, 0x7539fbe0, 0x7d62ae48, 0x3bdefe4a, 0xde12bb7d, 0xdde6a372, 0xabf4399e, 0xe5d32a3e, 0x96a5b4d2, 0x97525b2d, 
    0xe94494cd, 0x2a65c135, 0x07c6b355, 0x35bf53a5, 0x3dbf5bae, 0x64ba72ae, 0xb66adc31, 0xa3bb4a90, 0x19477492, 0x0d6041c6, 0x4dc3f868, 0x493cd2b5, 
    0x3292953d, 0xe140b140, 0x68c18959, 0xee93db91, 0x3d3cb6c6, 0xfd2b4be1, 0x7b50db2a, 0x62a7a88b, 0x1b75624e, 0x1c016248, 0x9dad7464, 0x7a9ac073, 
    0xf1541bf8, 0x8dfab734, 0x91acfdc5, 0x95798646, 0xd36881d5, 0x0127979f, 0x2aec39b0, 0x8d9593d4, 0x8a959314, 0x21fc09df, 0x7dbef8a1, 0x255d0d52, 
    0xda582069, 0x9d5d2e0f, 0xafcf6e77, 0x193fac45, 0x571af668, 0x07c3fed8, 0xdfefe695, 0x1b67b3f3, 0x539fd471, 0xffc2975d, 0x6a590800, 0x11777cfa, 
    0x9bf65a6a, 0x96392a75, 0x89c50b6b, 0x03200718, 0xea7164f2, 0xf8cd7a4f, 0x6ddbe085, 0xeaca2e0d, 0xb5e1857a, 0x54fb62d8, 0xa8b8f1c1, 0x7bfbbd3d, 
    0x83a9de50, 0x9673a77a, 0x699b8ef0, 0xc1b26aaa, 0x1a9b177b, 0xc50d5cc0, 0xb1a3dc79, 0xf8aaa61e, 0x0d0bce92, 0xd6d6e67a, 0xdb142e3f, 0x324e72b5, 
    0xb94f9ea0, 0xf047abae, 0x6dd8a795, 0xbfbe62af, 0x56e06982, 0x7aa10c73, 0xd3e94880, 0x9ec45735, 0xd2b3b417, 0xb52f75ee, 0x9b704fde, 0x0da4697e, 
    0x785eb09c, 0x25954acf, 0xe79a4acc, 0x7ec39fdc, 0xf46fd21b, 0xabab6b1b, 0xdd67324f, 0x19c7bcb9, 0x073810c3, 0x4fad55d0, 0xbe2ddac2, 0x563c7795, 
    0x078e645b, 0x9c6b3e74, 0xf58ea410, 0x277ac357, 0x691b34db, 0x35b500ff, 0xfdee3728, 0x501b37dc, 0x62e08861, 0x1f7e6aad, 0xb9ab74f2, 0x5935b67f, 
    0xb1ed4036, 0x85ad72ee, 0x458e113c, 0xe4f67e4b, 0x736eef37, 0x6dd3111e, 0x58564d35, 0x63f3622f, 0xb8810b58, 0x76943baf, 0xe7d6d423, 0x680c8fc4, 
    0xd0b41cde, 0x488e4cdf, 0xe581bde6, 0x87853c9c, 0x7ac6edf0, 0xc38f6a75, 0xb9b71a5e, 0x16d4a1d2, 0x79def6f6, 0x4a300643, 0x63c48013, 0xdb0a7ba6, 
    0xad830ff1, 0xfe05f0e4, 0x6aab73bf, 0x6b5a97b7, 0x5cba15c7, 0x552389dc, 0x0a464067, 0xd0e37de4, 0xde69d58e, 0x99578a46, 0xe1ebf0a3, 0x513c85df, 
    0xcb7b3be1, 0xfb5aeed8, 0xcfb6f3e7, 0x05fb7eb5, 0x57c01ec0, 0x0d4fe231, 0x0d1a36e9, 0xa7add5cd, 0xda6d3297, 0x659c63de, 0xe8133c80, 0x63f8a36b, 
    0x9db5a8e1, 0xcf9a1d1e, 0x1df9f488, 0xbeb0b95c, 0x90c3c511, 0x7ebcdd06, 0x5fd69c67, 0x1f29fc8f, 0xa3efed87, 0xeed4578b, 0x842c1f92, 0xa7dcb8b8, 
    0x0c8c7a25, 0xb5eea1f5, 0xea77ba07, 0x41477863, 0x2a4d35d3, 0xbc6def59, 0x807216d9, 0x6ae365ef, 0x9a7ac49e, 0x1e2de3ab, 0x1ffb4ac3, 0xbcf260d8, 
    0x76fefbdd, 0x3a6ee36c, 0x6b6bea93, 0x5fccf047, 0xc5d256d9, 0x7950eaa9, 0x90ae2cf1, 0x157715ce, 0x5b15e319, 0x8a1ddec4, 0xf59646df, 0x64eeefef, 
    0xc4051b83, 0x00cbc0c1, 0x7ba9547b, 0xefa590db, 0x7ec33fee, 0xf46fd21b, 0xabab6b1b, 0xdd67324f, 0x19c7bcb9, 0x073810c3, 0x4fad55d0, 0xbe2ddac2, 
    0x563c7795, 0x078e645b, 0x9c6b3e74, 0xf58ea410, 0x277ac357, 0x691b34db, 0x35b500ff, 0xfdee3728, 0x501b37dc, 0x62e08861, 0x1f7e6aad, 0xb9ab74f2, 
    0x5935b67f, 0xb1ed4036, 0x85ad72ee, 0x458e113c, 0xc4edfd26, 0x97b9bddf, 0x4c071de1, 0x67a934d5, 0x64f3b6bd, 0xbd03ca59, 0x7baa8d97, 0x5f6bea11, 
    0xd10c1ec7, 0x69015f34, 0x328cd5fa, 0x79737747, 0x2c653ee5, 0x402771bb, 0x4315dd7f, 0x5c0a5ac3, 0xaedc70e8, 0x995ba8a5, 0x2748164b, 0x460cb9d8, 
    0x2b408f71, 0xa2f05e6f, 0xd4b5c27f, 0xbdb54935, 0xf3e9e462, 0x4f5be4c7, 0x5910be75, 0x47da49d5, 0x08723b5c, 0xbd9f54eb, 0xfb7e71b9, 0xeff0bfd4, 
    0x3c85cfe1, 0x6b1be151, 0x6bb8d4db, 0xd9cebfe3, 0xd8f7d13e, 0x00a7032f, 0x4fe22f57, 0x1a36e90d, 0xadd5cd0d, 0x6d3297a7, 0x9c63deda, 0x133c8065, 
    0xf8a36be8, 0xb5a8e163, 0x9a1d1e9d, 0xf9f488cf, 0xd89c5d1d, 0xe1e2085f, 0xde6e03c8, 0x6bce333f, 0x14fec72f, 0xf7f6c38f, 0xeaabc5d1, 0x960f4977, 
    0x6e5c5c42, 0x46bd9253, 0x7bd37a06, 0xd32d47ad, 0x868752bf, 0xdfa437fc, 0x57d736e8, 0xcf649e56, 0x8e7973bb, 0x70208633, 0xc4a3a00f, 0x6cd21b9e, 
    0xab9b1b34, 0x642e4f5b, 0xc7bcb5db, 0x7800cb38, 0x8dd5d027, 0xfa88c327, 0xaa89a445, 0x218970ea, 0xc615d957, 0x27c352d5, 0xaba61e03, 0xfb4493f8, 
    0x3f73831e, 0x3ea5a6f6, 0x9abbbfcd, 0xb01c72e3, 0x5f548c1c, 0xfecedcde, 0xbfe1e1f6, 0xfa37e90d, 0xd5d5b50d, 0xee3399a7, 0x8c63dedc, 0x031c88e1, 
    0xa7d62ae8, 0xdf166de1, 0x2b9ebb4a, 0x0347b22d, 0xce351fba, 0x7a475208, 0x13bde1ab, 0xb40d9aed, 0x9ada00ff, 0x7ef71b94, 0xa88d1bee, 0x3170c430, 
    0x0f3fb556, 0xdc553af9, 0xac1adbbf, 0xd876209b, 0xc25639f7, 0x22c7089e, 0xc1edfd86, 0xaf727bbf, 0xa437fc86, 0xd736e8df, 0x649e5657, 0x7973bbcf, 
    0x2086338e, 0xada00f70, 0x03f811df, 0x0c1fd6c3, 0x6d43bcee, 0xc6ded104, 0xc4f713c8, 0xa7aacca0, 0x614dec83, 0xfb446f78, 0x3f6d8366, 0x06a5a6f6, 
    0x86bbdffd, 0x310c6ae3, 0xe6560c1c, 0x8ba6e1b5, 0xa8ab96e1, 0xccadbfb6, 0x568d652d, 0xd0cd5bd2, 0xf3416436, 0xc4fb3926, 0x8baa40fd, 0x2f2eb7f7, 
    0x3e977adf, 0xf039fc1d, 0x233c8aa7, 0x977a7b6d, 0xf9777c0d, 0x3eda27db, 0x74e005fb, 0x3ce70ae0, 0x275de15b, 0x9a2fd347, 0xd62cd8da, 0x953810ee, 
    0xa7f07dd8, 0x86efada9, 0x598b1a3e, 0xacd9e1d1, 0x914f8ff8, 0x85cdd9d5, 0x1c2e8ef0, 0xe3ed3680, 0xb3e63cf3, 0x5978217e, 0x00752874, 0x78a9ce9a, 
    0xbad82823, 0x731bdeb9, 0x64e0de2f, 0xd4f44df3, 0x52bfa36f, 0xdac2330d, 0x6995c62d, 0xa45bb63c, 0x3e770492, 0xa0928c6b, 0xc457f59e, 0x6cd21b9e, 
    0xab9b1b34, 0x642e4f5b, 0xc7bcb5db, 0x7800cb38, 0xadd5d027, 0x76fec333, 0xf62f6995, 0xf81eabc6, 0xce25b611, 0x80a37215, 0xbeaac031, 0xc73ed124, 
    0xfdcfdca0, 0xb34fa9a9, 0xb8e6ee6f, 0x072c87dc, 0xfb091523, 0xefa799db, 0x765a726e, 0x79a57fb1, 0xca9f619f, 0xe4bf71f3, 0x8e33ce56, 0xb19afaa0, 
    0x9dfa6aad, 0x5ed8b2d4, 0xc1f1f9dd, 0xd5eec731, 0x78464672, 0xa6b15a1f, 0xd55047f8, 0x82bd232c, 0x4c8e656b, 0x3c303be0, 0xf4293b12, 0x83973aab, 
    0xad5b55f5, 0xf8ac7942, 0x6684330f, 0x5a1927f7, 0x9bf9f1d6, 0x3c35175e, 0x4dab6137, 0x6b49dba0, 0x139a7dad, 0x655f6cbb, 0x1cf3db47, 0xcdf37af2, 
    0xf101f159, 0xaf84a70d, 0xfed727ad, 0x232363d1, 0x38f66f4b, 0xb8de79d7, 0x042387f9, 0x56a5c703, 0x24fcdff0, 0xdf36d81f, 0xfbcdfe61, 0xceb3cd3f, 
    0xe3fd37f3, 0xb98ee39c, 0xf09fc4a3, 0xdc607f90, 0x37fbbbfd, 0x2e00ffec, 0xcc2700ff, 0x3186f7df, 0xb3e23a9e, 0xbb32e6bb, 0x6ff828e7, 0xd32cdec7, 
    0xf4d0b261, 0xb6ec63cd, 0x358e689e, 0xb34f34fb, 0xb29ce47b, 0xf5c4f2e4, 0xc54fadac, 0x93b0de7a, 0x677ca126, 0xcc649013, 0x73100b68, 0x56610fd4, 
    0x6a0c4ff4, 0xeada3157, 0x80dab2b6, 0xac2c7a1f, 0x80bb55dd, 0x45ad473d, 0x504778a9, 0xbd24ecd2, 0x8e666b9e, 0x3123643c, 0xa83b903c, 0xaf2eadf5, 
    0xb7685e63, 0x34d3a763, 0xabf469ed, 0xf25f8b47, 0xa41068a3, 0xda46637f, 0xe70c8c36, 0x125f559c, 0xe8d06a58, 0x6b5d3237, 0x6d84695f, 0x51d917dd, 
    0x1cc37c37, 0x56f39c8e, 0x49f8cfb4, 0x3cadb27f, 0x27afec8f, 0x7f2f4fc8, 0xd16ebb99, 0x2abee38c, 0xe13f89af, 0xb9c1fe20, 0x6ff677fb, 0xfe5dfed9, 
    0xefbf994f, 0x753c630c, 0x23be64c5, 0x876e7e15, 0x7a6ba33d, 0x695a72b4, 0x44beb796, 0x7f8d282f, 0x73b78d74, 0xf21c7972, 0xbdd66a7d, 0x5756ebac, 
    0xba5c5ab7, 0xd01e9f97, 0x5d847c8e, 0xdb1394c1, 0x9ab4be8e, 0x2b358627, 0x5b75ed98, 0x0f406d59, 0x6e5616bd, 0x1ec0ddaa, 0xebacd6a3, 0x2ed6187e, 
    0x6ed5ba64, 0x2604b2a5, 0xfa9958f7, 0x7a04f62a, 0xc7bb5a0f, 0xe6f1d298, 0xc36ef82f, 0xb6419b56, 0xfb5ad792, 0xd8762734, 0xb78fcabe, 0xf5e439e6, 
    0xe2b39ae7, 0x4f1be203, 0x4f5a5f09, 0xc6a2fdaf, 0xdf964646, 0xf3ae71ec, 0x0ef371bd, 0x8f070846, 0xbfe1ad4a, 0xb03f48f8, 0xfdc3be6d, 0x9b7ff69b, 
    0x6fe69d67, 0xc739c7fb, 0x8947731d, 0xfe20e13f, 0x77fbb9c1, 0xfed96ff6, 0x994ffe5d, 0x630cefbf, 0x4dc5753c, 0x7c1731df, 0xc52778e2, 0x53582cbe, 
    0xdf35d343, 0x445bdab0, 0x64bf46d2, 0xf2655c8a, 0xab675846, 0xbcb2d613, 0x6f6bad57, 0xfa69dea8, 0x036fa686, 0x85393215, 0x6ec0b910, 0xfbdd8ec3, 
    0xd216fe54, 0x5d638835, 0x227b4f57, 0xb3404627, 0xe76ee097, 0xd6573d80, 0x8126f1a2, 0xa400ffaa, 0x59d237eb, 0xf50e00ff, 0x46d99b85, 0xf54e1f01, 
    0xf3c55c57, 0x7b336b2e, 0xa7b5d34c, 0x2d1eadd2, 0xa08dca7f, 0x8dfd9142, 0x30da681b, 0x55719e33, 0xab61497c, 0xc9dca043, 0xa67dad75, 0x5f74b711, 
    0xf3dd4465, 0x733a720c, 0x3fd35acd, 0xcafe25e1, 0xb23ff2b4, 0x3c219fbc, 0xed66febd, 0x8e3346bb, 0x24beaaf8, 0x838400ff, 0xede706fb, 0x67bfd9df, 
    0x3ef977f9, 0xbc00ff66, 0xd7f18c31, 0x33e20b15, 0x65e8e657, 0x56eb52f8, 0x32fb93bd, 0x24fb53d7, 0x2fd2c430, 0x00ff11ee, 0xee736488, 0xc56bb5de, 
    0x93d61a17, 0xab4b7004, 0xb53ba6fd, 0x64f67174, 0x7d000c4c, 0xf8a7ee7a, 0xecd44173, 0xae6cd488, 0x859a4f2d, 0xc0adcc36, 0xb5eeeddd, 0x261ac463, 
    0xb3c0aaaf, 0xab644f5e, 0x42c0ae6a, 0x020409ae, 0x4ee9937a, 0xd7a698eb, 0xb01b9e38, 0x6dd0a6d5, 0xbed6b5a4, 0xb6dd09cd, 0xeda3b22f, 0x3d798ef9, 
    0xf8ace679, 0xd386f880, 0x93d657c2, 0x6800ffeb, 0xa59191b1, 0x6b1cfbb7, 0x7c5cefbc, 0x018291c3, 0xa09bd2e3, 0xa341adc1, 0xb6a41d41, 0x6fbb0106, 
    0xefbb8f9a, 0x1d07e71c, 0x06bd4673, 0x3c8d3eb5, 0x08d87277, 0x52dedd0e, 0x31bcef3e, 0xc5759c8c, 0xddc4fb2b, 0x6fe009f3, 0xfbb3f812, 0x33cdb42d, 
    0xb4601fc4, 0x1f97c7b2, 0xef97e2d8, 0x86e531b3, 0x7abfe77a, 0x9d4be3a1, 0xd454146e, 0x2f7e9335, 0x6e33198b, 0x4fa57288, 0x951ff551, 0x27ade14f, 
    0x7bb5b055, 0xd9ec198b, 0x3a91712e, 0x47d24636, 0xf168ee63, 0xdfaa932e, 0xf4c5a5da, 0xd9966af6, 0x271b81c0, 0xf6b90371, 0xf7de5c15, 0x9ed75c91, 
    0xcd3417fa, 0x2a7d5a3b, 0xfcd7e2d1, 0x2904daa8, 0xb6d1d81f, 0x3903a38d, 0xc45715e7, 0x3ab41a96, 0x5a97cc0d, 0x1b61dad7, 0x54f64577, 0xc730df4d, 
    0xd53ca723, 0x7e3d3efd, 0x21d5363d, 0x96f24e97, 0x24bd0914, 0x670c8cdd, 0xd757ad07, 0xd1a7d6a0, 0x5bee8ea7, 0xbbdb0101, 0xf7dd47ca, 0x8e933186, 
    0x524fa8b8, 0xbf8cf713, 0x7fad3609, 0xaead2d6b, 0x6d48f6ab, 0xce7eb571, 0x62716792, 0xf5e33e79, 0xfe255eab, 0xa2f4d2da, 0x695febf2, 0x5ef2768e, 
    0x70a2b23f, 0x7d9ee754, 0xf046432b, 0xe787dedd, 0x8551977d, 0xbcbbedfc, 0x8c7162db, 0xeb7118e3, 0x1dfaea52, 0xb668b5ee, 0x08843ad7, 0x8ec1e18a, 
    0x04c881d5, 0x4feb7377, 0x0d797399, 0xa15f73c9, 0x0dbbe19b, 0xda066d5a, 0xec6b5d4b, 0x62db9dd0, 0xdf3e2afb, 0xd793e798, 0x88cf6a9e, 0x3c6d880f, 
    0x3e697d25, 0x198bf6bf, 0x7f5b1a19, 0xcebbc6b1, 0x39ccc7f5, 0x3d1e2018, 0xa59bee2a, 0x845d1a6a, 0xdb5f5076, 0x05e77134, 0x499e58ed, 0xb41ea43d, 
    0xa1565a6a, 0x654958aa, 0xc7b2fd3d, 0xd5523226, 0xde83e081, 0x9b4be943, 0xfdb9b8de, 0x8467dceb, 0x5b164f35, 0x2dce5ef8, 0x62bfc433, 0x5cfe5db4, 
    0x4d8a611f, 0xe6673b9f, 0x93939361, 0x150fd5f8, 0xa46febdb, 0x1aea5d5e, 0x540cbcf1, 0x10d586c8, 0x8e3bdcb9, 0xd22abf9d, 0x43ad74d3, 0xca8eb04b, 
    0x8e66fb0b, 0xabbde03c, 0xb427c913, 0x4b8dd683, 0x4b35d44a, 0xbfa72c09, 0xc6e458b6, 0x3cb05a4a, 0x7dc87b10, 0xb8ebf329, 0xf42deff9, 0x769ae929, 
    0xa355fab4, 0x51f9afc5, 0x3f5208b4, 0x1b6da3b1, 0xce730646, 0x2c89af2a, 0x1b746835, 0xafb52e99, 0xee36c2b4, 0x9ba8ec8b, 0x478e61be, 0xbbad794e, 
    0xd24a2d5b, 0xef681bd2, 0x8a424aad, 0xb2d55a8a, 0xf7e71840, 0xa5a51695, 0x84a51a6a, 0xdbdf5396, 0x2563722c, 0x081e582d, 0x943ee43d, 0x4b25b594, 
    0x1b3e995b, 0xd0a1d5bf, 0xd1b5a36d, 0xdd08d37e, 0x22b55fb6, 0x788ef96e, 0xade2393d, 0xb48e7a6a, 0x4bda55fa, 0xb45179a0, 0xb64f1e0e, 0x4e1b6d23, 
    0x2ace314e, 0xbff586af, 0xd036e8b1, 0x53ea657f, 0xc8fbddec, 0xcb21f76d, 0x5acdc113, 0xe741fcd4, 0x7f715769, 0xefb1ea63, 0xdb7bd781, 0x792a5761, 
    0x6d0a3c27, 0xd714db7b, 0xc357b1bd, 0x3ab4fa77, 0xba76b40d, 0x1b61da2f, 0xa4f6cbb6, 0xcf31df4d, 0x543ca707, 0x107f23de, 0x998be14f, 0x2d397cae, 
    0xbadb91b5, 0x8b0ecfeb, 0x1e748cf3, 0x438d1fb8, 0xec6fbde1, 0x1fb40d7a, 0xfb947ad9, 0x1bf27e37, 0xc472c87d, 0x175d73f0, 0x975e3c88, 0x74af0abf, 
    0xb875d085, 0x750d6489, 0x10d89e2d, 0x67d8caf9, 0x4ea7c7dd, 0x792555a4, 0x9e57526c, 0xa38537c6, 0xe5f029f1, 0x17fe69ab, 0xf9b5bdb8, 0xa0245cf6, 
    0x3cdbf907, 0xfcc8b163, 0x2f89b72a, 0x2b7479b5, 0x4fb4ae98, 0xee76c4b2, 0xfb4aed97, 0x73d8617e, 0xbeeb8ad7, 0xefc67819, 0x1694f046, 0x5f6b7873, 
    0xfe5db6bf, 0x2656d64c, 0x8b5dce58, 0xd401b761, 0xd7e08ee3, 0x6c3de333, 0x30ea58de, 0xb253179d, 0x3e0c25f3, 0xace56bd1, 0x1e207863, 0xc7a1f478, 
    0x366ed85b, 0x9976d869, 0xa549eba8, 0x075a245a, 0x81c01a9b, 0x2e62fb24, 0xe360b4e1, 0xf8aa661c, 0x5600ff92, 0x8eb9419b, 0x34fb45eb, 0x7ee96e27, 
    0xe6b78fd4, 0xe775e018, 0x78a6b58a, 0xadd2c983, 0xd5c7fe22, 0x2e02d964, 0xb6cab6f4, 0x790e7214, 0x9ac45715, 0x1b34dbdf, 0xf5b23f98, 0xfded3728, 
    0x50fbd6e4, 0xe6e48161, 0x627b2fa5, 0x0fb6f712, 0xd0eadf0d, 0xdad136e8, 0x8469bfe8, 0xda2fdb6e, 0xc77c3791, 0xf19c1e3c, 0x473db556, 0xed2a7d5a, 
    0xa83cd025, 0x270f07da, 0x8db611db, 0xe71827a7, 0x7ac35715, 0x1bf4d8df, 0xf5b23f68, 0xfd6ef629, 0x90fb36e4, 0xe6e089e5, 0x207e6aad, 0xb8abb4f3, 
    0x58f5b1bf, 0xbdebc0f7, 0x95abb0ed, 0x059e933c, 0x03db7b0d, 0x5fc5f65e, 0xd0eadf0d, 0xdad136e8, 0x8469bfe8, 0xda2fdb6e, 0xc77c3791, 0xf19c1e3c, 
    0x6d8a7852, 0x37c3e77a, 0xe9e14f72, 0x8252b320, 0xae70914b, 0x8ceb9db1, 0x1f3877e0, 0xbde1478d, 0x0d7aec6f, 0x7ad91fb4, 0x7e37fb94, 0xc87d1bf2, 
    0x73f0c472, 0x8ac75a5b, 0xcff0d13e, 0xb03fd357, 0xf9bca8b5, 0x49b56f63, 0xc3238869, 0x9ecf70c6, 0x1d07c609, 0xbd97a648, 0x7b5e49b1, 0x8f16de19, 
    0x96c3a7c4, 0x5ef8a7ad, 0xe7d7f6e2, 0x809270d9, 0xf16ce71f, 0xf023c78e, 0xbe24deaa, 0xaed0e5d5, 0x3ed1ba62, 0xbadb11cb, 0xed2bb55f, 0xcf6187f9, 
    0xf8ae2b5e, 0xbd1be365, 0x5950c21b, 0x7eade1cd, 0xf977d9fe, 0x99585933, 0x2d763963, 0x5307dc86, 0x5c833b8e, 0xb3f58ccf, 0xc2a86379, 0xcb4e5d74, 
    0xfb3094cc, 0xb196af45, 0x7980e08d, 0x8e9bd2e3, 0x6cdcb0b7, 0x33edb0d3, 0x4a93d651, 0x0fb448b4, 0x02813536, 0x5dc4f649, 0xc6c168c3, 0xf155cd38, 
    0x36adfe25, 0xd61d7383, 0x4e68f68b, 0xa9fdd2dd, 0x31cc6f1f, 0x15cfebc0, 0x07f14c6b, 0x455aa593, 0xc9aa8ffd, 0xe95d04b2, 0x286c956d, 0x2af21ce4, 
    0xbf3589af, 0x303768b6, 0x50ea657f, 0xc9fbdb6f, 0xc3a0f6ad, 0x4acdc903, 0x25c4f65e, 0xd15f6cef, 0xd2e3afee, 0xdf7448e1, 0x0fbb313a, 0xe6e7aae7, 
    0x7b4d8d3d, 0x8d35a977, 0xb195bec2, 0xbe194c0c, 0xc768a7d0, 0x3e3a545c, 0x2e7df6a5, 0x79c3be18, 0x3cdfdd2e, 0xcc4f6571, 0xd7d41c7a, 0x6399afba, 
    0xf7d99f70, 0x1b26bacb, 0xc7011c9a, 0x9e4acf53, 0xd8f712bb, 0xbfba4787, 0x21854b8f, 0xc6e87cd3, 0xab9e3fec, 0x35f6989f, 0xd7b5506f, 0x753fbc2f, 
    0xe58ffd73, 0xb2cac6da, 0x3b94f64d, 0xcbc7e54e, 0x9d1ff5d4, 0x2ff5d154, 0xc570e9b3, 0x76c91bf6, 0x8be3f9ee, 0xd0637e2a, 0xf558bae6, 0x9ac03baf, 
    0x66f6979d, 0xc86c9ea2, 0x1183f77c, 0xcc0f1926, 0xeaa7e3d9, 0x22afa22a, 0x512dafa2, 0xfe68a299, 0x82c1fe25, 0xae055d7b, 0xb26dbe6d, 0xdf02caad, 
    0xd7cbcf31, 0x58376bae, 0x4c1fd4b9, 0x7cd32799, 0x3f77f984, 0xe6b7ad9e, 0xf0b9ab1d, 0xa47bb72e, 0xc6150968, 0x116aac9d, 0xb651defc, 0xe683deb4, 
    0x19d97062, 0xe38af9eb, 0x3daa51bc, 0xba2c5fd2, 0xc9a3ed65, 0x8726e22e, 0x38b84c68, 0x3b1be534, 0xd3a42895, 0xde956d48, 0xea36b6a4, 0x11f4569a, 
    0x42fb5628, 0x711dc38d, 0x5717eb50, 0x247369f2, 0x19936fda, 0xd5f397db, 0xc20ef3b1, 0x7cd5b2a6, 0xfe741bbb, 0xb16dbecf, 0xe4b0dc28, 0x7a8e3a1e, 
    0xa5c63a54, 0x682e8df6, 0x1679c3be, 0x913cbfed, 0x3acc4761, 0xd875d49c, 0xbdb16fcd, 0x19541445, 0xd0b05f85, 0x16521df5, 0xcddbce96, 0xefa46d45, 
    0x4ffcc155, 0xf3ae50bd, 0x1e9d80c0, 0x678203e4, 0xbe00ff38, 0xdd555445, 0x9d54848b, 0xe14bcd99, 0x2e146e6d, 0xd7810dd6, 0xc81fab6b, 0x8320c81a, 
    0x7a453082, 0xa967937e, 0xd74ef1e9, 0x90f4a6d7, 0x31ea200a, 0xce6b7dee, 0xd4211375, 0x8c585aae, 0x18b3d22e, 0xe7e4f0cf, 0x211be514, 0xe52a0ace, 
    0xa0a2286a, 0x37bce4cc, 0xc3264de2, 0xbab5b641, 0x4de6f2bb, 0x73cb97db, 0x9023b18c, 0xd45a0d3d, 0xdca253fc, 0x45705769, 0x2049ba7b, 0x38e54174, 
    0xed402ac9, 0x3db58547, 0x96c3df3e, 0x6d7d4fb1, 0x28bf8b14, 0xf391aaf2, 0xde6a62b7, 0xb269abad, 0xc7b1d768, 0xb5bbdaa8, 0x665581bc, 0x782a4952, 
    0xb7a33503, 0x2eadc636, 0x0daf8c6d, 0xb04993f8, 0x6ead6dd0, 0x93b9fcae, 0xdcf2e576, 0xe4482ce3, 0x5a5b430f, 0x3d3c8dc7, 0x57cff075, 0x37d4e0d1, 
    0x1bcb5cdf, 0x20931745, 0x4fc603dc, 0x53387025, 0xffacf6d4, 0x7a6a0b00, 0x2d87bf7d, 0xdafa9e62, 0x517e1729, 0xe72355e5, 0xe2d1c46e, 0xb84f4f9d, 
    0x50d4e5f0, 0x234b5b5f, 0xaa24c26c, 0xd8ebfcc4, 0xb6a4a51a, 0x8d3d6929, 0x2e7e86df, 0x348797f0, 0xf5d4661b, 0x6cef86e7, 0xb6a8258b, 0xe4729595, 
    0x0f52958c, 0x648d3f18, 0x96f142fc, 0xb518e289, 0xa2fbec0f, 0x358252e6, 0x0a963a31, 0xd823cfcb, 0xd4161ed4, 0x0e7ffbf4, 0xf53dc55a, 0xfc2e52b4, 
    0x47aacaa3, 0xa389ddce, 0x9f9e3ac5, 0xa8cbe171, 0x96b6bea0, 0x4984d946, 0xd7f98955, 0xad3734b0, 0xbb2b37ac, 0x9e69a85b, 0xf46dd129, 0xbd2548ab, 
    0x227024db, 0xe09cf238, 0xaaf60085, 0x26f124be, 0xdca07f93, 0xf9dddada, 0xabdd3e93, 0x18ceb8e5, 0x821ec913, 0x5b9d74b5, 0xb2468f4d, 0xd5464d8e, 
    0x0ce36d1d, 0x088232ad, 0xaa19c151, 0xf4d4299e, 0x5d0e8ffb, 0xb4f50545, 0x22cc36b2, 0xce4fac4a, 0x56a981bd, 0x9784d8e6, 0x0d5fc536, 0xb04993f8, 
    0x6ead6dd0, 0x93b9fcae, 0xdcf2e576, 0xe4482ce3, 0xb556430f, 0xb7e8143f, 0x11dc551a, 0x4892ee5e, 0x4e79101d, 0x3b904a32, 0x4f6de151, 0xe5f0b74f, 
    0x5bdf53ac, 0xcaef2245, 0x7ca4aa3c, 0xb79ad8ed, 0x6cda6aab, 0x71ec359a, 0xedae36ea, 0x5955206f, 0x9e4a9294, 0xdc0ecd00, 0x9b4b03db, 0x7ec32b63, 
    0x346cd224, 0xab5b6b1b, 0xdd642ebf, 0x38b77cb9, 0x033912cb, 0xb1d6d6d0, 0x5d0f4fe3, 0xf4d5337c, 0xf70d3578, 0xd1c632d7, 0x37c8e445, 0xc993f100, 
    0xf5140e5c, 0xc23fab3d, 0x6f9f9eda, 0xa758cbe1, 0x458ab6be, 0x557994df, 0xb1dbf948, 0x53a77834, 0x393ceed3, 0xd6171475, 0x30dbc8d2, 0x3fb12a89, 
    0xa906f63a, 0x5a8a2d69, 0xe177634f, 0x25bc8b9f, 0xd906cde1, 0xe1793db5, 0xc922dbbb, 0x65a52d6a, 0x2523b95c, 0x0fc68354, 0x103f59e3, 0x78a265bc, 
    0xfb432d86, 0x94b9e83e, 0x4e4c8da0, 0xf3b282a5, 0x0735f6c8, 0x3e3db585, 0xb196c3df, 0x146d7d4f, 0xf228bf8b, 0xb7f391aa, 0x4ef16862, 0x78dca7a7, 
    0x2f28ea72, 0xb691a5ad, 0x62551261, 0x0dec757e, 0x0d6beb0d, 0xead6eeca, 0x748a671a, 0xd22a7d5b, 0xc9766f09, 0x3c8e081c, 0x402138a7, 0x89afaa3d, 
    0xdfa4493c, 0xb63637e8, 0xcf647eb7, 0x6ef96ab7, 0xf2048633, 0x5dada047, 0x63d35627, 0x93a3acd1, 0x5b47b551, 0x4c2bc378, 0x701482a0, 0x8aa76a46, 
    0xe33e3d75, 0x415197c3, 0x8d2c6d7d, 0xab9208b3, 0x60aff313, 0xb6b9556a, 0xb1cd2521, 0x58ac8f2e, 0xc370e95a, 0x5d64fb34, 0xe3181bd9, 0xa9b027e6, 
    0x36cd75af, 0x92881b5b, 0x32f12ee7, 0x92dcd8a8, 0x7768943e, 0x106991b6, 0xa350b724, 0x9056d98d, 0x56633e02, 0xdfecef2f, 0xbb55b94e, 0x60a29981, 
    0x4e129000, 0x2fb9270d, 0x3e3a8a7d, 0xa56b61b1, 0xedd30cc3, 0x6c647791, 0x9e988f63, 0xf145bac2, 0x812f8f2e, 0x2f392d75, 0x99a7da47, 0x6194710c, 
    0xe4091990, 0x8335768c, 0x45dadea1, 0xdd9240a4, 0x65378e42, 0xf908405a, 0xede51a8d, 0xe944baa4, 0xe72ed415, 0x0464156e, 0x4e53989f, 0x4b3b29d2, 
    0x26f0a863, 0x0ecfe1b3, 0x7d49d1e9, 0x6b9fecae, 0x7d21c0ab, 0x642496ab, 0x1fe34180, 0xdb78619d, 0xb95efac4, 0x4cd9eb2d, 0x102acc5b, 0x02586014, 
    0x557be439, 0xd2f60e4d, 0x9604222d, 0xbb7114ea, 0x4700d22a, 0x2fd768cc, 0x27d2256d, 0x77a1ae48, 0x20ab703b, 0x9bc2fc24, 0xdcb0b696, 0xb260edae, 
    0xacd834d7, 0x9c7be26d, 0xc3aa443a, 0xfa407063, 0xb1c63a54, 0xcda57561, 0x91ee330c, 0x616ce0b6, 0xe21e989f, 0xd95f58af, 0xad6c9da6, 0xc4b20277, 
    0x042083a0, 0xaeaf0a1c, 0xa44bda5e, 0x425d914e, 0x56e176ee, 0x85f94940, 0xbe85dc4a, 0x5114c5c6, 0x6f574050, 0x788b9be0, 0x9a948bb4, 0x4ccb38e2, 
    0x3fc01d70, 0x45115774, 0xca9d5d54, 0xce5db98c, 0x34d346f3, 0xba7702fd, 0x508e5b93, 0x85a08d54, 0xcdc9881f, 0xfcfd9a72, 0x3db3965a, 0xd88820d4, 
    0x128ca480, 0x3a6bc600, 0xacae1c8a, 0x6475e586, 0xa9288a82, 0x00d9ff20, 
};
};
} // namespace BluePrint
